# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  alias l='exa -l'
  alias ll='exa -gla'
  alias lla='ls -la --color'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

alias rm='rm -i'
alias mv='mv -i'
alias le='less -FXRi'
alias du='du -h -d 1'
alias df='df -h | grep -v ^none | ( read header ; echo "$header" ; sort -k 6 )'
alias env='env | sort'
alias dmesg='sudo dmesg -T'
alias fd='/usr/lib/cargo/bin/fd'
alias t='tree --du -h -L'

alias uz='7z x'

function d2u () {
  sed -i 's/\r//' $1
}

alias v='nvim'

alias cuol='curl -OL'

function bi () {
  dir="$(fd --type d . /media/downloads | sort | fzf --delimiter / --with-nth -2)"
  beet import "${dir}"
  rm -rI "${dir}"
}

function stf () {
  CURRENT_DIR=$(pwd)
  SPLIT_DIR="${1}"

  find "${CURRENT_DIR}/${SPLIT_DIR}" -name "*cue" -type f | while read c; do
    echo ${c}
    APE_FILE=$(basename "${c}" cue)ape
    FLAC_FILE=$(basename "${c}" cue)flac
    CUE_DIR=$(dirname "${c}")
    
    pushd "${CUE_DIR}"
    
    # convert ape to flac
    [[ -f "${APE_FILE}" ]] && ffmpeg -i "${APE_FILE}" -y "${FLAC_FILE}" < /dev/null
    
    # split flac
    mkdir -p "$(basename ${c} .cue)"
    [[ -f "${FLAC_FILE}" ]] && shnsplit -O always -d "$(basename ${c} .cue)" -t %n-%t -o flac -f "$(basename ${c})" "${FLAC_FILE}"

    # tag split flac
    cuetag "$(basename ${c})" "$(basename ${c} .cue)"/*
    rm -rf "$(basename ${c} .cue)"**/00-pregap.flac
    
    popd; 
  done
}

function resample-beet () {
  beet ls -p bitdepth:24 | while read f; do
    mkdir -p "resampled/$(basename "$(dirname "${f}")")"
    sox -S -G "${f}" -r 48000 -b 16 "./resampled/$(basename "$(dirname "${f}")")/$(basename "${f}")"
  done
}

function t4j() {
  tail -f $1 | sed --unbuffered -e 's/\(\[[0-9]\{2\}.*\]\)\s/\o033[1;34m\1/' \
                            -e 's/\(\[SEVERE.*\)/\o033[31m\1\o033[39m/' \
                            -e 's/\(\[ERROR.*\)/\o033[31m\1\o033[39m/' \
                            -e 's/\(\[ WARN.*\)/\o033[33;40m\1\o033[39m/' \
                            -e 's/\(\[ INFO.*\)/\o033[37m\1/' \
                            -e 's/\(\[DEBUG.*\)/\o033[1;30m\1\o033[39m/'
}

# ----------------------
# Git Functions & Aliases
# ----------------------
source ${XDG_CONFIG_HOME}/git/fzf-aliases

# forgit
# https://github.com/wfxr/forgit
source ${XDG_CONFIG_HOME}/forgit/forgit.plugin.sh

alias gusmom='git submodule foreach git pull --rebase origin master'

match_cherries() {
    a="$(git rev-parse --verify "$1")" &&
    b="$(git rev-parse --verify "$2")" &&
    git rev-list "$a...$b" | xargs git show | git patch-id |
      awk '
        { p[$1] = p[$1] " " $2 }
      END { 
        gs = "git show -s --format=%ct "
        for (i in p) {
          l=length(p[i]) 
          print p[i]
          if (l>41) {
            c1 = substr(p[i],2,41)
            cmd = gs c1
            while ( ( cmd | getline timestamp ) > 0 ) { 
              t1 = timestamp
            }
            close(cmd)
            c2 = substr(p[i],43,41)
            cmd = gs " " c2
            while ( ( cmd | getline timestamp ) > 0 ) {
              t2 = timestamp
            }
            close(cmd)
            if (t1 > t2) 
              print c2 " -> " c1
            else
              print c2 " <- " c1
          }
        }
      }'
}

#-----------------------
# Apache Maven
#-----------------------
alias mvnd='mvn -offline -T 1C install -DskipTests'

function mci () {
  mvn -T 1C clean install
}

function msbd () {
  mvn -T 1C spring-boot:run -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005" -XX:+TieredCompilation -XX:TieredStopAtLevel=1
}

function start_dev () {
  cd $1 && \
  export WORSPACE=$1 && \
  tmux send-keys 'vim' C-m \; \
  split-window -v -p 16 \; \
  select-pane -t 1 \;
}

function udist () {
  sudo apt update &&
  sudo apt -u upgrade &&
  sudo apt --purge --assume-yes autoremove &&
  sudo apt clean &&
  deborphan;
}

function find_downloaded_videos {
  fd -e mp4 -e mkv . '/media/downloads' | sort | fzf +s --delimiter / --with-nth -1
}

function plm {
  #sudo su -P -s /bin/bash -c "export XDG_RUNTIME_DIR=/run/user/$(id -u vlcd) && mpv --sub-auto=all $1" vlcd
  movie="$(find_downloaded_videos)"
  echo ${movie}
  mpv --sub-auto=all "${movie}"
}

function pls {
  #sudo su -P -s /bin/bash -c "export XDG_RUNTIME_DIR=/run/user/$(id -u vlcd) && mpv --sub-auto=exact $1" vlcd
  mpv --sub-auto=exact "$(find_downloaded_videos)"
}

[[ -f ${XDG_CONFIG_HOME}/local/aliases ]] && . ${XDG_CONFIG_HOME}/local/aliases

